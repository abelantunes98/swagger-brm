/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.36).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.FullRefund;
import io.swagger.model.PartialRefund;
import io.swagger.model.RefundBills;
import io.swagger.model.RefundDetails;
import io.swagger.model.RefundableItems;
import org.springframework.core.io.Resource;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-12-14T12:38:42.664Z[GMT]")
@Validated
public interface RefundsApi {

    @Operation(summary = "Create a Full Refund for a Bill", description = "Creates a full refund for a bill.", tags={ "Refunds" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "201", description = "The refund was created successfully.", content = @Content(mediaType = "application/xml", schema = @Schema(implementation = Resource.class))),
        
        @ApiResponse(responseCode = "400", description = "The request isn't valid."),
        
        @ApiResponse(responseCode = "500", description = "An internal server error occurred.") })
    @RequestMapping(value = "/refunds/bill/{id}/fullRefund",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/xml", "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Resource> fullBillRefund(@Parameter(in = ParameterIn.PATH, description = "The ID of the bill to refund.", required=true, schema=@Schema()) @PathVariable("id") String id, @Parameter(in = ParameterIn.DEFAULT, description = "Details about the refund.", schema=@Schema()) @Valid @RequestBody FullRefund body);


    @Operation(summary = "Get Refund Details", description = "Get details about the specified refund.", tags={ "Refunds" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "The refund details were returned successfully.", content = @Content(mediaType = "application/xml", schema = @Schema(implementation = RefundDetails.class))),
        
        @ApiResponse(responseCode = "500", description = "An internal server error occurred.") })
    @RequestMapping(value = "/refunds/{id}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<RefundDetails> getRefundDetails(@Parameter(in = ParameterIn.PATH, description = "The ID of the refund, such as 0.0.0.1+-item-refund+294950591220927922.", required=true, schema=@Schema()) @PathVariable("id") String id);


    @Operation(summary = "Get Refundable Items for an Account", description = "Gets refundable items for an account, such as unallocated adjustments, unallocated payments, and refundable bills.", tags={ "Refunds" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "The list of refundable items was returned successfully.", content = @Content(mediaType = "application/xml", array = @ArraySchema(schema = @Schema(implementation = RefundableItems.class)))),
        
        @ApiResponse(responseCode = "500", description = "An internal server error occurred.") })
    @RequestMapping(value = "/refunds/items/account/{id}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<RefundableItems>> getRefundableItems(@Parameter(in = ParameterIn.PATH, description = "The account ID for the refundable items.", required=true, schema=@Schema()) @PathVariable("id") String id);


    @Operation(summary = "Refund Part of a Bill", description = "Creates a partial refund for the bill that matches the specified ID.", tags={ "Refunds" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "201", description = "The partial refund was created successfully.", content = @Content(mediaType = "application/xml", schema = @Schema(implementation = Resource.class))),
        
        @ApiResponse(responseCode = "400", description = "The request isn't valid."),
        
        @ApiResponse(responseCode = "500", description = "An internal server error occurred.") })
    @RequestMapping(value = "/refunds/bill/{id}/partialRefund",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/xml", "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Resource> partialBillRefund(@Parameter(in = ParameterIn.PATH, description = "The ID of the bill for the partial refund.", required=true, schema=@Schema()) @PathVariable("id") String id, @Parameter(in = ParameterIn.DEFAULT, description = "Details about the partial refund.", schema=@Schema()) @Valid @RequestBody PartialRefund body);


    @Operation(summary = "Create a Refund for an Account", description = "Creates a refund for the specified account.", tags={ "Refunds" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "201", description = "The refund was created successfully."),
        
        @ApiResponse(responseCode = "400", description = "The request isn't valid."),
        
        @ApiResponse(responseCode = "500", description = "An internal server error occurred.") })
    @RequestMapping(value = "/refunds/account/{id}",
        consumes = { "application/xml", "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> refundAccount(@Parameter(in = ParameterIn.PATH, description = "The ID of the account to refund.", required=true, schema=@Schema()) @PathVariable("id") String id, @Parameter(in = ParameterIn.DEFAULT, description = "Details about the refund.", schema=@Schema()) @Valid @RequestBody FullRefund body);


    @Operation(summary = "Refund Multiple Bills", description = "Creates full refunds for the bills specified in the body.", tags={ "Refunds" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "201", description = "The bills were refunded successfully."),
        
        @ApiResponse(responseCode = "400", description = "The request isn't valid."),
        
        @ApiResponse(responseCode = "500", description = "An internal server error occurred.") })
    @RequestMapping(value = "/refunds/bills",
        consumes = { "application/xml", "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> refundMultipleBills(@Parameter(in = ParameterIn.DEFAULT, description = "Details about the bills to refund.", schema=@Schema()) @Valid @RequestBody RefundBills body);

}

