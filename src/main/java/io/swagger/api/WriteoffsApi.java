/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.36).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.ArActionsList;
import io.swagger.model.ReverseWriteoff;
import io.swagger.model.WriteOffDetails;
import io.swagger.model.Writeoff;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-12-14T12:38:42.664Z[GMT]")
@Validated
public interface WriteoffsApi {

    @Operation(summary = "Get Write-Offs for an Account", description = "Gets the write-off details for the account that matches the specified ID.", tags={ "Write Offs" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "The write-off details were returned successfully.", content = @Content(mediaType = "application/xml", array = @ArraySchema(schema = @Schema(implementation = ArActionsList.class)))),
        
        @ApiResponse(responseCode = "500", description = "An internal server error occurred.") })
    @RequestMapping(value = "/writeoffs/account/{id}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<ArActionsList>> getAccountWriteOffDetails(@Parameter(in = ParameterIn.PATH, description = "The ID of the account, such as 0.0.0.1+-account+296516.", required=true, schema=@Schema()) @PathVariable("id") String id);


    @Operation(summary = "Get Write-Off Details", description = "Gets the details for the write off that matches the specified ID.", tags={ "Write Offs" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "The write-off details were returned successfully.", content = @Content(mediaType = "application/xml", schema = @Schema(implementation = WriteOffDetails.class))),
        
        @ApiResponse(responseCode = "500", description = "An internal server error occurred.") })
    @RequestMapping(value = "/writeoffs/{id}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<WriteOffDetails> getWriteOffDetails(@Parameter(in = ParameterIn.PATH, description = "The ID of the write off, such as 0.0.0.1+-item-writeoff+296516295779285649.", required=true, schema=@Schema()) @PathVariable("id") String id);


    @Operation(summary = "Create a Write-Off Reversal for an Account", description = "Reverses the write-off for the specified account.", tags={ "Write Offs" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "201", description = "The write-off reversal was created successfully."),
        
        @ApiResponse(responseCode = "500", description = "An internal server error occurred") })
    @RequestMapping(value = "/writeoffs/reverse/account/{id}",
        consumes = { "application/xml", "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> writeOffReverse(@Parameter(in = ParameterIn.PATH, description = "The ID of the account.", required=true, schema=@Schema()) @PathVariable("id") String id, @Parameter(in = ParameterIn.DEFAULT, description = "The write-off reversal to create. The minimum required parameters are&colon;<p> <ul><li><b>effective</b></li><li><b>notes</b></li></ul>", schema=@Schema()) @Valid @RequestBody ReverseWriteoff body);


    @Operation(summary = "Write Off an Account", description = "Writes off the account that matches the specified ID.", tags={ "Write Offs" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "201", description = "The account was written off successfully."),
        
        @ApiResponse(responseCode = "500", description = "An internal server error occurred.") })
    @RequestMapping(value = "/writeoffs/account/{id}",
        consumes = { "application/xml", "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> writeoffAccount(@Parameter(in = ParameterIn.PATH, description = "The ID of the account to write off.", required=true, schema=@Schema()) @PathVariable("id") String id, @Parameter(in = ParameterIn.DEFAULT, description = "The write off details. The minimum required parameters are&colon;<ul><li><b>inactivateAccount</b></li><li><b>effective</b></li><li><b>notes</b></li><li><b>writeoffTax</b></li></ul>For write-off reversals, the account is required.", schema=@Schema()) @Valid @RequestBody Writeoff body);


    @Operation(summary = "Write Off a Bill", description = "Writes off the bill that matches the specified ID.", tags={ "Write Offs" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "The bill was written off successfully.", content = @Content(mediaType = "application/xml", schema = @Schema(implementation = Writeoff.class))),
        
        @ApiResponse(responseCode = "500", description = "An internal server error occurred.") })
    @RequestMapping(value = "/writeoffs/bill/{id}",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/xml", "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Writeoff> writeoffBill(@Parameter(in = ParameterIn.PATH, description = "The ID of the bill to write off.", required=true, schema=@Schema()) @PathVariable("id") String id, @Parameter(in = ParameterIn.DEFAULT, description = "The write off details.", schema=@Schema()) @Valid @RequestBody Writeoff body);


    @Operation(summary = "Write Off an Item", description = "Writes off the item that matches the specified ID.", tags={ "Write Offs" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "The item was written off successfully.", content = @Content(mediaType = "application/xml", schema = @Schema(implementation = Writeoff.class))),
        
        @ApiResponse(responseCode = "500", description = "An internal server error occurred.") })
    @RequestMapping(value = "/writeoffs/item/{id}",
        produces = { "application/xml", "application/json" }, 
        consumes = { "application/xml", "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Writeoff> writeoffItem(@Parameter(in = ParameterIn.PATH, description = "The ID of the item to write off.", required=true, schema=@Schema()) @PathVariable("id") String id, @Parameter(in = ParameterIn.DEFAULT, description = "The write off details.", schema=@Schema()) @Valid @RequestBody Writeoff body);

}

